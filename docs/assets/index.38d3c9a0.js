import{p as e,a as s,u as t,c as r,o as n,b as a,d as i,t as l,e as c,F as d,f as u,r as o,g as m,h as p}from"./vendor.63487d8d.js";e("data-v-31970c1c");const b={class:"loading-bar"};s();const g={expose:[],setup(e){const s=t(),u=r((()=>s.state.restingTime)),o=r((()=>100-s.state.restingTime/90*100));return(e,s)=>(n(),a(d,null,[i("div",null,"Rest: "+l(c(u))+" s",1),i("div",b,[i("div",{class:"loading-bar__fill",style:`width: ${c(o)}%`},null,4)])],64))},__scopeId:"data-v-31970c1c"},S={expose:[],setup(e){const s=t(),d=r((()=>s.state.currentExo)),u=r((()=>s.state.backDisabled));return(e,s)=>(n(),a("div",null,[i("div",null,l(c(u)&&c(d).disabledName||c(d).name),1),i("div",null,"Set "+l(c(d).currentSet)+" of "+l(c(d).sets),1),i("div",null,l(c(d).reps)+" reps",1)]))}};e("data-v-62f19bed");const k=i("h1",null,"Training",-1),x={key:2};s();const T={expose:[],setup(e){const s=t(),l=()=>s.commit("endSet"),o=()=>s.commit("skipRest"),m=r((()=>s.getters.isResting));return(e,s)=>(n(),a(d,null,[k,c(m)?(n(),a(g,{key:0,class:"rest-time"})):u("",!0),c(m)?(n(),a("button",{key:1,onClick:o},"Skip rest")):u("",!0),c(m)?(n(),a("div",x,"Up next :")):u("",!0),i(S,{class:"exo-infos"}),c(m)?u("",!0):(n(),a("button",{key:3,onClick:l},"Done"))],64))},__scopeId:"data-v-62f19bed"};e("data-v-7f990d42");const v=i("h1",null,"Training Selection",-1),f={class:"exercises"},N={class:"back-container"},h=i("label",{for:"backDisabled"},"My back hurts",-1);s();const y={expose:[],setup(e){const s=t(),u=r((()=>s.getters.exerciseList)),m=r((()=>s.state.backDisabled)),p=()=>s.commit("toggleBackDisabled");return(e,t)=>(n(),a(d,null,[v,i("div",f,[(n(!0),a(d,null,o(c(u),(e=>(n(),a("button",{key:e,class:"exercise",onClick:()=>(e=>s.commit("setExercise",e))(e)},l(e),9,["onClick"])))),128))]),i("div",N,[i("input",{type:"checkbox",id:"backDisabled",onChange:p,checked:c(m)},null,40,["checked"]),h])],64))},__scopeId:"data-v-7f990d42"};const E={expose:[],setup(e){const s=t(),i=r((()=>s.getters.isTrainingSelected));return s.commit("runTimeLoop"),(e,s)=>c(i)?(n(),a(T,{key:0})):(n(),a(y,{key:1}))}},D={push:[{id:1,name:"Bench press / Military press",disabledName:"",sets:4,currentSet:1,reps:"5"},{id:2,name:"Military press / Bench press",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:3,name:"Incline dumbbell press",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:4,name:"Triceps pushdowns",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:5,name:"overhead triceps extensions",disabledName:"",sets:3,currentSet:1,reps:"8-12"}],pull:[{id:1,name:"Deadlift / Barbell rows",disabledName:"Pullups",sets:4,currentSet:1,reps:"5"},{id:2,name:"Pull Ups",disabledName:"Chest supported rows",sets:3,currentSet:1,reps:"8-12"},{id:3,name:"Cable rows",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:4,name:"Face pulls",disabledName:"",sets:3,currentSet:1,reps:"15-20"},{id:5,name:"Curls",disabledName:"",sets:3,currentSet:1,reps:"8-12"}],legs:[{id:1,name:"Squat",disabledName:"Bulgarian Split Squats",sets:4,currentSet:1,reps:"5"},{id:2,name:"Romanian Deadlift",disabledName:"Lunges",sets:3,currentSet:1,reps:"8-12"},{id:3,name:"Leg press",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:4,name:"Leg curls",disabledName:"",sets:3,currentSet:1,reps:"8-12"},{id:5,name:"Calf raises",disabledName:"",sets:3,currentSet:1,reps:"AMRAP"}]},C=m({state:()=>({currentTraining:null,currentExo:null,restingTime:0,backDisabled:!1}),mutations:{endSet(e){if(e.currentExo.currentSet<e.currentExo.sets)e.currentExo.currentSet++;else{const s=D[e.currentTraining].find((s=>s.id===e.currentExo.id+1));null==s?(e.currentTraining=null,e.currentExo=null):(e.currentExo=s,e.currentExo.currentSet=1)}e.restingTime=90},skipRest(e){e.restingTime=0},setExercise(e,s){e.restingTime=0,e.currentTraining=s,e.currentExo=D[s][0],e.currentExo.currentSet=1},toggleBackDisabled(e){e.backDisabled=!e.backDisabled},runTimeLoop(e){setInterval((function(){e.restingTime-=1}),1e3)}},getters:{isResting:e=>e.restingTime>0,isTrainingSelected:e=>!!e.currentTraining,exerciseList:e=>Object.keys(D)}}),_=p(E);_.use(C),_.mount("#app");
